### ========================================
### USER STORY 5: Payload Delivery and PDT Generation
### ========================================

### Step 1: Deliver Payload (Simulates pressure sensor activation, this generates PDT with new weighing bridge) -
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-001",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "seller-001",
  "deliveryTime": "31/08/2025 08:00"
}


### Step 1.1: Deliver Payload 2
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-002",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "seller-001",
  "deliveryTime": "31/08/2025 08:05"
}


### Step 1.2: Deliver Payload 3

POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-003",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "seller-001",
  "deliveryTime": "31/08/2025 08:10"
}

### Step 1.3: Deliver Payload 4

POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-004",
  "rawMaterialName": "Iron Ore",
  "warehouseNumber": "Warehouse-02",
  "payloadWeight": 25,
  "sellerId": "seller-001",
  "deliveryTime": "31/08/2025 08:16"
}

### Step 1.4: Deliver Payload 5
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-005",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "seller-001",
  "deliveryTime": "31/08/2025 08:20"
} 

### Step 1.5: Deliver Payload 6
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-006",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "seller-002",
  "deliveryTime": "31/08/2025 08:25"
}

### Step 1.6: Deliver Payload 7
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-007",
  "rawMaterialName": "Iron Ore",
  "warehouseNumber": "Warehouse-02",
  "payloadWeight": 25.0,
  "sellerId": "seller-002",
  "deliveryTime": "31/08/2025 08:30"
}

### Step 1.7: Deliver Payload 8
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-008",
  "rawMaterialName": "Iron Ore",
  "warehouseNumber": "Warehouse-02",
  "payloadWeight": 25.0,
  "sellerId": "seller-003",
  "deliveryTime": "31/08/2025 08:33"
}


### Step 1.8: Deliver Payload 9
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "licensePlate": "TRK-009",
  "rawMaterialName": "Cement",
  "warehouseNumber": "Warehouse-03",
  "payloadWeight": 25.0,
  "sellerId": "seller-003",
  "deliveryTime": "31/08/2025 08:40"
}

### Step 1.9: Deliver Payload 10
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
{
  "licensePlate": "TRK-010",
  "rawMaterialName": "Slag",
  "warehouseNumber": "Warehouse-03",
  "payloadWeight": 25.0,
  "sellerId": "seller-004",
  "deliveryTime": "31/08/2025 08:41"
}

### Retrieve PDT by License Plate
GET http://localhost:8190/api/warehousing/payload-delivery/pdt/TRK-001

### Retrieve All PDTs
GET http://localhost:8190/api/warehousing/payload-delivery/pdt


### Test Invalid Request (Missing License Plate)
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json

{
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "conveyorBeltNumber": "WH-001-CB-GYPSUM",
  "payloadWeight": 18.5,
  "sellerId": "seller-001"
}