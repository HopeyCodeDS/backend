### Get access token for warehouse manager
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-warehousing&
client_secret=KOmQ8z3kOniN4hsq0nkZxmhm5eoEjJzt&
username=warehouse_manager&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("warehouse_manager_access_token", response.body.access_token);
%}


### Just Curious to know the number of trucks on-site on application startup (after data seeding)
GET http://localhost:8190/api/landside/trucks/on-site/count
Content-Type: application/json
Authorization: Bearer {{warehouse_manager_access_token}}

########################################################
#         Get access token for landside context        #
########################################################

### Get access token for seller
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-landside&
client_secret=tjzuAO2QUaGSTyTg9OBvEcYIYkn9OSMN&
username=seller&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("seller_access_token", response.body.access_token);
    console.log("Token received:", response.body.access_token);
%}

### APPOINTMENT SCHEDULING (User story 1)
### Appointment 1: Create an appointment truck 10

POST http://localhost:8190/api/landside/appointments
Content-Type: application/json
Authorization: Bearer {{seller_access_token}}

{
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "licensePlate": "TRK-101",
  "truckType": "LARGE",
  "rawMaterialName": "Gypsum",
  "scheduledTime": "28/08/2025 08:30"
}

####
#POST http://localhost:8190/api/landside/appointments
#Content-Type: application/json
#Authorization: Bearer {{seller_access_token}}
#
#{
#  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
#  "sellerName": "De klant van KDG",
#  "licensePlate": "TRK-001",
#  "truckType": "LARGE",
#  "rawMaterialName": "Gypsum",
#  "scheduledTime": "28/08/2025 08:30"
#}
#
#
####
#POST http://localhost:8190/api/landside/appointments
#Content-Type: application/json
#Authorization: Bearer {{seller_access_token}}
#
#{
#  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
#  "sellerName": "De klant van KDG",
#  "licensePlate": "TRK-002",
#  "truckType": "LARGE",
#  "rawMaterialName": "Gypsum",
#  "scheduledTime": "28/08/2025 08:30"
#}

### Appointment 2: Create an appointment for truck 2
POST http://localhost:8190/api/landside/appointments
Content-Type: application/json
Authorization: Bearer {{seller_access_token}}

{
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "licensePlate": "TRK-102",
  "truckType": "LARGE",
  "rawMaterialName": "Gypsum",
  "scheduledTime": "28/08/2025 20:30"
}


### Appointment 3: Create an appointment for truck 3
POST http://localhost:8190/api/landside/appointments
Content-Type: application/json
Authorization: Bearer {{seller_access_token}}

{
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "licensePlate": "TRK-103",
  "truckType": "LARGE",
  "rawMaterialName": "Gypsum",
  "scheduledTime": "29/08/2025 08:30"
}

### Appointment 4: Create an appointment for truck 4
POST http://localhost:8190/api/landside/appointments
Content-Type: application/json
Authorization: Bearer {{seller_access_token}}

{
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "licensePlate": "TRK-104",
  "truckType": "LARGE",
  "rawMaterialName": "Iron_Ore",
  "scheduledTime": "29/08/2025 20:30"
}

### Appointment 5: Create an appointment for truck 5
POST http://localhost:8190/api/landside/appointments
Content-Type: application/json
Authorization: Bearer {{seller_access_token}}

{
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "licensePlate": "TRK-105",
  "truckType": "LARGE",
  "rawMaterialName": "Cement",
  "scheduledTime": "30/08/2025 08:30"
}


### Get access token for warehouse manager
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-warehousing&
client_secret=KOmQ8z3kOniN4hsq0nkZxmhm5eoEjJzt&
username=warehouse_manager&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("warehouse_manager_access_token", response.body.access_token);
%}



### Get all appointments
GET http://localhost:8190/api/landside/appointments
Authorization: Bearer {{warehouse_manager_access_token}}


#################################
#   RECOGNITION (User story 2)  #
#################################


### Get access token for truck driver
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-landside&
client_secret=tjzuAO2QUaGSTyTg9OBvEcYIYkn9OSMN&
username=truck_driver&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("truck_driver_access_token", response.body.access_token);
    console.log("Token received:", response.body.access_token);
%}




### Recognize truck arrival 1
POST http://localhost:8190/api/landside/gate/recognize
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-101",
  "recognitionTime": "28/08/2025 09:00"
}

### Recognize truck arrival 2
POST http://localhost:8190/api/landside/gate/recognize
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-102",
  "recognitionTime": "28/08/2025 21:00"
}

### Recognize truck arrival 3
POST http://localhost:8190/api/landside/gate/recognize
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-103",
  "recognitionTime": "29/08/2025 09:00"
}

### Recognize truck arrival 4
POST http://localhost:8190/api/landside/gate/recognize
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-104",
  "recognitionTime": "29/08/2025 21:00"
}

### Recognize truck arrival 5
POST http://localhost:8190/api/landside/gate/recognize
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-105",
  "recognitionTime": "30/08/2025 09:00"
}


#################################
#   WEIGHING BRIDGE ASSIGNMENT  #
#################################


### Assign weighing bridge to truck 1
POST http://localhost:8190/api/landside/weighing-bridge/assign
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-101",
  "assignmentTime": "28/08/2025 09:00"
}

### Assign weighing bridge to truck 2
POST http://localhost:8190/api/landside/weighing-bridge/assign
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-102",
  "assignmentTime": "28/08/2025 21:00"
}

### Assign weighing bridge to truck 3
POST http://localhost:8190/api/landside/weighing-bridge/assign
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-103",
  "assignmentTime": "29/08/2025 09:00"
}

### Assign weighing bridge to truck 4
POST http://localhost:8190/api/landside/weighing-bridge/assign
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-104",
  "assignmentTime": "29/08/2025 21:00"
}

### Assign weighing bridge to truck 5
POST http://localhost:8190/api/landside/weighing-bridge/assign
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-105",
  "assignmentTime": "30/08/2025 09:00"
}



##############################################################################
##       USER STORY 4: Register Weight and Receive Warehouse Number         ##
##############################################################################

### Get access token for truck driver
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-landside&
client_secret=tjzuAO2QUaGSTyTg9OBvEcYIYkn9OSMN&
username=truck_driver&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("truck_driver_access_token", response.body.access_token);
    console.log("Token received:", response.body.access_token);
%}

### Register truck weight and exit bridge - truck 1
### This triggers the async warehouse assignment process
POST http://localhost:8190/api/landside/weight-registration/register
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-101",
  "weight": 25000.0,
  "rawMaterialName": "Gypsum"
}

### Register truck weight and exit bridge - truck 2
POST http://localhost:8190/api/landside/weight-registration/register
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-102",
  "weight": 25000.0,
  "rawMaterialName": "Gypsum"
}


### Register truck weight and exit bridge - truck 3
POST http://localhost:8190/api/landside/weight-registration/register
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-103",
  "weight": 25000.0,
  "rawMaterialName": "Gypsum"
}

### Register truck weight and exit bridge - truck 4
POST http://localhost:8190/api/landside/weight-registration/register
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-104",
  "weight": 25000.0,
  "rawMaterialName": "Iron_Ore"
}

### Register truck weight and exit bridge - truck 5
POST http://localhost:8190/api/landside/weight-registration/register
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-105",
  "weight": 25000.0,
  "rawMaterialName": "Cement"
}


### Check warehouse assignment status - truck 1
GET http://localhost:8190/api/landside/weight-registration/status/TRK-101
Authorization: Bearer {{truck_driver_access_token}}

### Check warehouse assignment status - truck 2
GET http://localhost:8190/api/landside/weight-registration/status/TRK-102
Authorization: Bearer {{truck_driver_access_token}}

### Check warehouse assignment status - truck 3
GET http://localhost:8190/api/landside/weight-registration/status/TRK-103
Authorization: Bearer {{truck_driver_access_token}}

### Check warehouse assignment status - truck 4
GET http://localhost:8190/api/landside/weight-registration/status/TRK-104
Authorization: Bearer {{truck_driver_access_token}}

### Check warehouse assignment status - truck 5
GET http://localhost:8190/api/landside/weight-registration/status/TRK-105
Authorization: Bearer {{truck_driver_access_token}}




############################################################################################
##   USER STORY 5: Payload Delivery and PDT Generation                                    ##
##   (Simulates a pressure sensor activation, this generates PDT with new weighing bridge)  ##
############################################################################################

### Get access token for truck driver
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-landside&
client_secret=tjzuAO2QUaGSTyTg9OBvEcYIYkn9OSMN&
username=truck_driver&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("truck_driver_access_token", response.body.access_token);
    console.log("Token received:", response.body.access_token);
%}

### Deliver Payload  - truck 1
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-101",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "deliveryTime": "28/08/2025 09:00"
}



### Deliver Payload  - truck 2
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-102",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "deliveryTime": "28/08/2025 21:00"
}


### Deliver Payload  - truck 3
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-103",
  "rawMaterialName": "Gypsum",
  "warehouseNumber": "Warehouse-01",
  "payloadWeight": 25.0,
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "deliveryTime": "29/08/2025 09:00"
}

### Deliver Payload  - truck 4
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-104",
  "rawMaterialName": "Iron_Ore",
  "warehouseNumber": "Warehouse-02",
  "payloadWeight": 25,
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "deliveryTime": "29/08/2025 21:00"
}

### Deliver Payload  - truck 5
POST http://localhost:8190/api/warehousing/payload-delivery/deliver
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-105",
  "rawMaterialName": "Cement",
  "warehouseNumber": "Warehouse-03",
  "payloadWeight": 23.0,
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "deliveryTime": "30/08/2025 09:00"
}

### Retrieve All PDTs
GET http://localhost:8190/api/warehousing/payload-delivery/pdt
Authorization: Bearer {{truck_driver_access_token}}


############################################################################################
##   Check the storage cost preparation after payload  delivery                           ##
############################################################################################

### Get access token for accountant
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-invoicing&
client_secret=SpUuMCiiAA62Dh5xc16UVEGrDwg0QUPM&
username=accountant&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("accountant_access_token", response.body.access_token);
%}


### -- IMPORTANT TEST CASES FOR MY FUTURE DATES SCENARIOS

### Step 1: Pre-Loading Storage Fee Calculation (04/09/2025)
POST http://localhost:8190/api/invoicing/storage-fees/calculate?calculationDate=2025-09-04
Authorization: Bearer {{accountant_access_token}}




############################################################################################
##   USER STORY 6: Generate Weighbridge Ticket                                            ##
##   (This validates the exit weighing bridge first before generating the WBT)           ##
############################################################################################

### Get access token for truck driver
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-landside&
client_secret=tjzuAO2QUaGSTyTg9OBvEcYIYkn9OSMN&
username=truck_driver&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("truck_driver_access_token", response.body.access_token);
    console.log("Token received:", response.body.access_token);
%}

### Generate weighbridge ticket - truck 1
POST http://localhost:8190/api/landside/weighbridge-ticket/generate
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-101",
  "grossWeight": 25000.0,
  "tareWeight": 8000.0,
  "weighingTime": "28/08/2025 09:30"
}


### Generate weighbridge ticket - truck 2
POST http://localhost:8190/api/landside/weighbridge-ticket/generate
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-102",
  "grossWeight": 25000.0,
  "tareWeight": 8000.0,
  "weighingTime": "28/08/2025 21:30"
}


### Generate weighbridge ticket - truck 3
POST http://localhost:8190/api/landside/weighbridge-ticket/generate
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-103",
  "grossWeight": 25000.0,
  "tareWeight": 8000.0,
  "weighingTime": "29/08/2025 09:30"
}

### Generate weighbridge ticket - truck 4
POST http://localhost:8190/api/landside/weighbridge-ticket/generate
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-104",
  "grossWeight": 25000.0,
  "tareWeight": 8000.0,
  "weighingTime": "29/08/2025 21:30"
}

### Generate weighbridge ticket - truck 5
POST http://localhost:8190/api/landside/weighbridge-ticket/generate
Content-Type: application/json
Authorization: Bearer {{truck_driver_access_token}}

{
  "licensePlate": "TRK-105",
  "grossWeight": 25000.0,
  "tareWeight": 8000.0,
  "weighingTime": "30/08/2025 09:30"
}


######################################

########################################################
#         Get access token for warehousing context    #
########################################################

### Get access token for warehouse manager
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-warehousing&
client_secret=KOmQ8z3kOniN4hsq0nkZxmhm5eoEjJzt&
username=warehouse_manager&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("warehouse_manager_access_token", response.body.access_token);
%}

### Get all warehouses
GET http://localhost:8190/api/warehouses HTTP/1.1
Authorization: Bearer {{warehouse_manager_access_token}}


############################################################################################
##   USER STORY 7: Get Arrival Compliance Data for Warehouse Manager                        ##
############################################################################################

GET http://localhost:8190/api/landside/arrival-compliance
Content-Type: application/json
Authorization: Bearer {{warehouse_manager_access_token}}


############################################################################################
##   USER STORY 8: Get Trucks on Site Count for Warehouse Manager                          ##
############################################################################################

GET http://localhost:8190/api/landside/trucks/on-site/count
Content-Type: application/json
Authorization: Bearer {{warehouse_manager_access_token}}



############################################################################################
##   USER STORY 9: Get Warehouse Overview for Warehouse Manager                           ##
############################################################################################

### Get warehouse overview - For user story 9 and 21
GET http://localhost:8190/api/warehouses/overview
Content-Type: application/json
Authorization: Bearer {{warehouse_manager_access_token}}




###############################



########################################################
#         Get access token for invoicing context    #
########################################################

### Get access token for buyer
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-invoicing&
client_secret=SpUuMCiiAA62Dh5xc16UVEGrDwg0QUPM&
username=buyer&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("buyer_access_token", response.body.access_token);
%}

###########################################################################
##        USER STORY 10: Purchase Order Submission by Buyer              ##
###########################################################################

### Submit purchase order 1
POST http://localhost:8190/api/invoicing/purchase-orders
Content-Type: application/json
Authorization: Bearer {{buyer_access_token}}

{
  "purchaseOrderNumber": "PO-2025-101",
  "customerNumber": "CUST-101",
  "customerName": "Gyproc & Co.",
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "orderDate": "01/09/2025 08:00",
  "orderLines": [
    {
      "lineNumber": 1,
      "rawMaterialName": "Gypsum",
      "amountInTons": 10,
      "pricePerTon": 13.0
    },
    {
      "lineNumber": 2,
      "rawMaterialName": "Gypsum",
      "amountInTons": 21,
      "pricePerTon": 13.0
    }
  ]
}


### Submit Purchase Order 2
POST http://localhost:8190/api/invoicing/purchase-orders
Content-Type: application/json
Authorization: Bearer {{buyer_access_token}}

{
  "purchaseOrderNumber": "PO-2025-102",
  "customerNumber": "CUST-102",
  "customerName": "Cemminerals NV.",
  "sellerId": "ef01c728-ce36-46b5-a110-84f53fdd9668",
  "sellerName": "De klant van KDG",
  "orderDate": "01/09/2025 08:00",
  "orderLines": [
    {
      "lineNumber": 1,
      "rawMaterialName": "Iron_Ore",
      "amountInTons": 14,
      "pricePerTon": 110.0
    },
    {
      "lineNumber": 2,
      "rawMaterialName": "Cement",
      "amountInTons": 12,
      "pricePerTon": 95.0
    },
    {
      "lineNumber": 3,
      "rawMaterialName": "Cement",
      "amountInTons": 10,
      "pricePerTon": 95.0
    }
  ]
}



#########################################################




########################################################
#         Get access token for waterside context       #
########################################################

#################################################################################
##                 Shipping Order Submission for Ship Captain                  ##
#################################################################################

### Get access token for ship_captain
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-waterside&
client_secret=PywINKlxk7wJJDNIm5ItYK386Cv9Hhfr&
username=ship_captain&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("ship_captain_access_token", response.body.access_token);
%}

### Submit Shipping Order
POST http://localhost:8190/api/waterside/shipping-orders
Content-Type: application/json
Authorization: Bearer {{ship_captain_access_token}}

{
  "shippingOrderNumber": "SO-2025-101",
  "purchaseOrderReference": "PO-2025-101",
  "vesselNumber": "VESSEL-101",
  "customerNumber": "CUST-101",
  "estimatedArrivalDate": "03/09/2025 08:00",
  "estimatedDepartureDate": "05/09/2025 08:00",
  "actualArrivalDate": "04/09/2025 10:00"
}

### Submit Shipping Order 2
POST http://localhost:8190/api/waterside/shipping-orders
Content-Type: application/json
Authorization: Bearer {{ship_captain_access_token}}

{
  "shippingOrderNumber": "SO-2025-102",
  "purchaseOrderReference": "PO-2025-102",
  "vesselNumber": "VESSEL-102",
  "customerNumber": "CUST-102",
  "estimatedArrivalDate": "03/09/2025 10:00",
  "estimatedDepartureDate": "05/09/2025 12:00",
  "actualArrivalDate": "04/09/2025 10:00"
}


#################################################################################
##             Shipping Order Matching with Purchase Order by Foreman          ##
#################################################################################

### Get access token for foreman
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-waterside&
client_secret=PywINKlxk7wJJDNIm5ItYK386Cv9Hhfr&
username=foreman&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("foreman_access_token", response.body.access_token);
%}

### Get Unmatched Shipping Orders - User story 15
GET http://localhost:8190/api/waterside/foreman/unmatched-shipping-orders
Authorization: Bearer {{foreman_access_token}}

### Get All Shipment Arrivals - User story 16
GET http://localhost:8190/api/waterside/foreman/shipment-arrivals
Authorization: Bearer {{foreman_access_token}}


### Match Shipping Order with Purchase Order 1 - MATCHING PO WITH SO
POST http://localhost:8190/api/waterside/foreman/match-shipping-order
Content-Type: application/json
Authorization: Bearer {{foreman_access_token}}

{
  "shippingOrderId": "bd659a0b-072e-4231-9744-7b53614bd197",
  "foremanSignature": "Foreman_Michael_Johnson"
}

### Match Shipping Order with Purchase Order 2
POST http://localhost:8190/api/waterside/foreman/match-shipping-order
Content-Type: application/json
Authorization: Bearer {{foreman_access_token}}

{
  "shippingOrderId": "c9b954d9-6151-42cb-8c9e-e3a9fc0494ec",
  "foremanSignature": "Foreman_Michael_Johnson"
}

#######################################################################################
##                Inspection Operations by Inspector                                ##
#######################################################################################

### Get access token for inspector
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-waterside&
client_secret=PywINKlxk7wJJDNIm5ItYK386Cv9Hhfr&
username=inspector&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("inspector_access_token", response.body.access_token);
%}

### Get Outstanding Inspections - User story 13
GET http://localhost:8190/api/waterside/inspections/outstanding
Authorization: Bearer {{inspector_access_token}}

### Complete Inspection - Using actual shipping order ID from the application logs
POST http://localhost:8190/api/waterside/inspections/complete
Content-Type: application/json
Authorization: Bearer {{inspector_access_token}}

{
  "shippingOrderId": "bd659a0b-072e-4231-9744-7b53614bd197",
  "inspectorSignature": "Inspector_Adrian_Van_Hecke"
}

### Complete Inspection - Another shipping order
POST http://localhost:8190/api/waterside/inspections/complete
Content-Type: application/json
Authorization: Bearer {{inspector_access_token}}

{
  "shippingOrderId": "c9b954d9-6151-42cb-8c9e-e3a9fc0494ec",
  "inspectorSignature": "Inspector_Adrian_Van_Hecke"
}

#############################################################################################
##            Bunkering Operations by Bunkering Officer                                    ##
#############################################################################################

### Get access token for bunkering officer
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-waterside&
client_secret=PywINKlxk7wJJDNIm5ItYK386Cv9Hhfr&
username=bunkering_officer&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("bunkering_officer_access_token", response.body.access_token);
%}

### Get Outstanding Bunkering Operations - User story 14
GET http://localhost:8190/api/waterside/bunkering/outstanding
Authorization: Bearer {{bunkering_officer_access_token}}

### Complete Bunkering for Vessel 1
POST http://localhost:8190/api/waterside/bunkering/complete
Content-Type: application/json
Authorization: Bearer {{bunkering_officer_access_token}}

{
  "shippingOrderId": "bd659a0b-072e-4231-9744-7b53614bd197",
  "bunkeringOfficerSignature": "BunkeringOfficer_Daniel_James"
}

### Complete Bunkering for Vessel 2
POST http://localhost:8190/api/waterside/bunkering/complete
Content-Type: application/json
Authorization: Bearer {{bunkering_officer_access_token}}

{
  "shippingOrderId": "c9b954d9-6151-42cb-8c9e-e3a9fc0494ec",
  "bunkeringOfficerSignature": "BunkeringOfficer_Daniel_James"
}


######################################################################################
##   Check the storage cost preparation after vessel loading                        ##
##   (loading happens immediately after the bunkering/inspection operation)         ##
######################################################################################

### Get access token for accountant
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-invoicing&
client_secret=SpUuMCiiAA62Dh5xc16UVEGrDwg0QUPM&
username=accountant&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("accountant_access_token", response.body.access_token);
%}


### -- IMPORTANT TEST CASES FOR MY FUTURE DATES SCENARIOS

### Post-Loading Storage Fee Calculation (04/09/2025)
POST http://localhost:8190/api/invoicing/storage-fees/calculate?calculationDate=2025-09-05
Authorization: Bearer {{accountant_access_token}}



#############################################################################
##   Port Operations Overview by Ship Captain                              ##
#############################################################################

### Get access token for ship_captain
POST http://localhost:8180/realms/kdgRealm/protocol/openid-connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded

client_id=kdg-waterside&
client_secret=PywINKlxk7wJJDNIm5ItYK386Cv9Hhfr&
username=ship_captain&
password=password&
grant_type=password&
scope=openid

> {%
    client.global.set("ship_captain_access_token", response.body.access_token);
%}


### Get Operations Overview for Vessel 1
GET http://localhost:8190/api/waterside/captain/operations/VESSEL-101
Authorization: Bearer {{ship_captain_access_token}}

### Get Operations Overview for Vessel 2
GET http://localhost:8190/api/waterside/captain/operations/VESSEL-102
Authorization: Bearer {{ship_captain_access_token}}

### Get Operations Overview for Vessel 3
GET http://localhost:8190/api/waterside/captain/operations/VESSEL-009
Authorization: Bearer {{ship_captain_access_token}}

### Get Operations Overview for all vessels
GET http://localhost:8190/api/waterside/captain/operations-overview
Authorization: Bearer {{ship_captain_access_token}}





